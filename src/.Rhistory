qlnorm(90, meanlog = 3, sdlog = 0.5)
qlnorm(1, meanlog = 3, sdlog = 0.5)
qlnorm(0.999, meanlog = 3, sdlog = 0.5)
qlnorm(0.9999999999999, meanlog = 3, sdlog = 0.5)
qlnorm(0, meanlog = 3, sdlog = 0.5)
qlnorm(0.9, meanlog = 3, sdlog = 0.5)
integrate(fuction(x) {dlnorm(x, meanlog = 3, sdlog = 0.242)},
lower = qlnorm(0.1, meanlog = 3, sdlog = 0.5),
upper = qlnorm(0.9, meanlog = 3, sdlog = 0.5))
integrate(fuction(x) {dlnorm(x, meanlog = 3, sdlog = 0.242)},
lower = qlnorm(0.1, meanlog = 3, sdlog = 0.5),
upper = qlnorm(0.9, meanlog = 3, sdlog = 0.5))
integrate(function(x) {dlnorm(x, meanlog = 3, sdlog = 0.242)},
lower = qlnorm(0.1, meanlog = 3, sdlog = 0.5),
upper = qlnorm(0.9, meanlog = 3, sdlog = 0.5))
plnorm(38.1214, 3, 0.5)
plnorm(38.1214, 3, 0.5) - plnorm(10.58274, 3, 0.5)
integrate(function(x) {dlnorm(x, meanlog = 3, sdlog = 0.242)},
10.58274, 38.1214)
integrate(function(x) {dlnorm(x, meanlog = 3, sdlog = 0.242)},
lower = 10.58274, upper = 38.1214)
plnorm(38.1214, 3, 0.5) - plnorm(10.58274, 3, 0.5)
integrate(function(x) {dlnorm(x, meanlog = 3, sdlog = 0.5)},
lower = 10.58274, upper = 38.1214)
plnorm(38.1214, 3, 0.5) - plnorm(10.58274, 3, 0.5)
#ЗАДАНИЕ 2
tibble(p = seq(0, 1, by = 0.01)) %>%
ggplot(aes(p)) +
stat_function(fun = function(p) dbinom(9, 16, p)*dbinom(38, 44, p), geom = "col")+
labs(x = "параметр биномиального распределения p",
y = "значение функции правдоподобия\n(два наблюдения)")
#Задание 3
df <- read_csv("https://afbo.info/pairs.csv?sEcho=1&iSortingCols=1&iSortCol_0=0&sSortDir_0=asc")
View(df)
df %>%
filter(reliability = 'high')
df %>%
filter(reliability = 'high') %>%
view()
df %>%
filter(reliability == 'high') %>%
view()
library(fitdistrplus)
install.packages('fitdistrplus')
library(fitdistrplus)
df <- read_csv("https://afbo.info/pairs.csv?sEcho=1&iSortingCols=1&iSortCol_0=0&sSortDir_0=asc")
library(fitdistrplus)
df %>%
filter(reliability == 'high') -> df2
fitdist(df2$count_borrowing, distr = exp, method = "mle" )
fitdist(df2$count_borrowing, distr = "exp", method = "mle" )
View(df2)
fitdist(df2$count_borrowed, distr = "exp", method = "mle" )
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram()
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = exp, args = list(mean = 0.1291585, sd = 0.01589736),
color = 'red')
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = exp, args = 0.1291585,
color = 'red')
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = dexp, args = 0.1291585,
color = 'red', size = 2)
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = dexp, args = 0.1291585,
color = 'red')
fitdist(df2$count_borrowed, distr = "exp", method = "mle" )
fitdist(df2$count_borrowed, distr = "dexp", method = "mle" )
fitdist(df2$count_borrowed, distr = "exp", method = "mle" )
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = exp, args = 0.1291585,
color = 'red')
?dexp
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = exp, args = list(rate = 0.1291585),
color = 'red')
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = dexp, args = list(rate = 0.1291585),
color = 'red')
fitdist(df2$count_borrowed, distr = "dexp", method = "mle" )
fitdist(df2$count_borrowed, distr = "exp", method = "mle" )
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = dexp, args = list(rate = 1.5),
color = 'red')
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = dexp, args = list(rate = 8),
color = 'red')
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = dexp, args = list(rate = 108),
color = 'red')
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram() +
stat_function(fun = dexp, args = list(rate = 2),
color = 'red')
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dexp, args = list(rate = 2),
color = 'red')
fitdist(df2$count_borrowed, distr = "exp", method = "mle" )
tibble(data = df2$count_borrowed) %>%
ggplot(aes(data)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dexp, args = list(rate = 0.1291585),
color = 'red')
df1 <- read_xpt("C:\Users\SKudr\Documents\биоинформатика\3 модуль\BIOPRO_I.XPT")
df1 <- read_xpt("C:\Users\SKudr\Documents\bioinformatics\3modul\BIOPRO_I.XPT")
df1 <- read_xpt("C:\Users\SKudr\Documents\bioinformatics\3modul\BIOPRO_I.xpt")
df1 <- read_xpt("C:\\Users\SKudr\Documents\bioinformatics\3modul\BIOPRO_I.xpt")
df1 <- read_xpt("C:/Users/SKudr/Documents/bioinformatics/3modul/BIOPRO_I.xpt")
?read_xpt
??read_xpt
install.packages(haven)
install.packages("haven)
install.packages("haven")
install.packages("haven")
library(tidyverse)
library(haven)
df1 <- read_xpt("C:/Users/SKudr/Documents/bioinformatics/3modul/BIOPRO_I.xpt")
df_bio <- read_xpt("C:/Users/SKudr/Documents/bioinformatics/3modul/BIOPRO_I.xpt")
df_demo <- read_xpt("C:/Users/SKudr/Documents/bioinformatics/3modul/DEMO_I.xpt")
View(df_bio)
View(df_demo)
?merge
df_all <- merge(df_bio, df_demo, by = 'SEQN')
require(ggplot2)
# РІРµРєС‚РѕСЂ РІРѕР·СЂР°СЃС‚Р°
ages<-20:80
# РїРѕРІС‚РѕСЂСЏРµРј РІРµРєС‚РѕСЂ 10 СЂР°Р·
ages<-rep(ages,10)
# РґР°С‚Р°Р№СЂРµР№Рј СЃРѕ СЃР»СѓС‡Р°Р№РЅС‹РјРё v1 Рё v2, Рє v2 РґРѕР±Р°РІР»СЏРµРј РїР°СЂР°Р±РѕР»РёС‡РµСЃРєСЋ Р·Р°РІРёСЃРёРјРѕСЃС‚СЊ РѕС‚ ages
df<-data.frame(age=ages,v1=runif(length(ages)),v2=5000*runif(length(ages))+2*ages^2)
View(df)
# СѓР·РЅР°С‘Рј РєРѕР»РёС‡РµСЃС‚РІРѕ СЃС‚СЂРѕРє РґР°С‚Р°С„СЂРµР№РјР°
nrow(df)
# СЃРѕР·РґР°С‘Рј СЃС‚РѕР»Р±РµС† sex Рё Р·Р°РїРѕР»РЅСЏРµРј РµРіРѕ M
df$sex<-"M"
# СЂР°РЅРґРѕРјРЅС‹Рµ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂС‹ РґР»СЏ Р¶РµРЅС‰РёРЅ - СЃРµРјРїР»РёСЂРѕРІР°РЅРёРµ.
# РїРµСЂРІС‹Р№ РїР°СЂР°РјРµС‚СЂ 1:length(ages) - РёРЅРґРµРєСЃС‹ СЃС‚СЂРѕРє, РІС‚РѕСЂРѕР№ - РєРѕР»РёС‡РµСЃС‚РІРѕ РЅР°Р±РѕСЂРѕРІ, replace = F - РІС‹Р±РѕСЂРєР° Р±РµР· РїРѕРІС‚РѕСЂРµРЅРёР№
id<-sample(1:length(ages),round(nrow(df)/2),replace = F)
# Р·Р°РїРёСЃС‹Р°РµРј F РІ СЃС‚СЂРѕРєРё СЃ РЅРѕРјРµСЂР°РјРё СЃС‚СЂРѕРє id
df$sex[id]<-"F"
View(df)
# cС‚СЂРѕРёРј РіСЂР°С„РёРє СЃ С‚РѕС‡РєР°РјРё Рё СЃРїР»Р°Р№РЅ-РёРЅС‚РµСЂРїРѕР»СЏС†РёРµР№
ggplot(df,aes(x=ages,y=v2,color=sex)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
View(df_all)
View(df_demo)
ggplot(df_all, aes(x=LBDSALSI, y=LBDSUASI, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
colnames <- colnames(df_all)
for i in colnames {
ggplot(df_all, aes(x=LBDSALSI, y=i, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
}
for (i in colnames) {
ggplot(df_all, aes(x=LBDSALSI, y=i, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
}
for (i in colnames[1]) {
ggplot(df_all, aes(x=LBDSALSI, y=i, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
}
colnames[2:3]
for (i in colnames[2:3]) {
ggplot(df_all, aes(x=LBDSALSI, y=i, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
}
for (i in colnames[2:3]) {
ggplot(df_all, aes(x=LBDSALSI, y=i, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
}
# load package
library(pheatmap)
#С‚РµСЃС‚РѕРІР°СЏ РјР°С‚СЂРёС†Р°, - 200 СЂР°РЅРґРѕРјРЅС‹С… С‡РёСЃРµР» (РЅРѕСЂРјР°Р»СЊРЅРѕРµ СЂР°СЃСЂРµРґРµР»РµРЅРёРµ), СЃС‚СЂРѕРєРё, СЃС‚РѕР»Р±С†С‹
test = matrix(rnorm(200), 20, 10)
View(test)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
# paste - РѕР±СЉРµРґРёРЅСЏРµС‚ СЃС‚СЂРѕРєСѓ
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
# СЃС‚СЂРѕРёРј С‚РµРїР»РѕРІСѓ РєР°СЂС‚Сѓ
pheatmap(test,cluster_cols = F,scale = "column",display_numbers = T)
colnames[2:2]
for (i in colnames[2:2]) {
ggplot(df_all, aes(x=LBDSALSI, y=i, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
}
cm<-cor(df_all)
cm<-cor(df_all_)
df_all_ <- df1_<-df1_[,-1]
cm<-cor(df1_)
df_all_ <- df_all[,-1]
cm<-cor(df_all_)
View(cm)
cm<-cor(df_all_, na.exclude())
cm<-cor(df_all_, rm.na)
clean_df <- na.omit(df_all)
View(clean_df)
clean_df <- complete.cases(df_all)
View(df_bio)
View(df_demo)
?merge
df_all <- merge(df_bio, df_demo[ , c("SEQN", "RIAGENDR", "RIDAGEYR")], by = 'SEQN')
colnames <- colnames(df_all)
for (i in colnames[2:2]) {
ggplot(df_all, aes(x=LBDSALSI, y=i, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
}
df_all_ <- df_all[,-1]
cm<-cor(df_all_)
View(cm)
cm<-cor(df_all_, use = "pairwise.complete.obs")
cm<-cor(df_all_, use = "pairwise.complete.obs")
View(cm)
pheatmap(as.matrix(cm),display_numbers = T, cluster_rows = F,cluster_cols = F,fontsize = 18)
pheatmap(as.matrix(cm),display_numbers = T, cluster_rows = F,cluster_cols = F,fontsize = 4)
pheatmap(as.matrix(cm),display_numbers = T, cluster_rows = F,cluster_cols = F,fontsize = 4, filename = "diagram.png"))
pheatmap(as.matrix(cm),display_numbers = T, cluster_rows = F,cluster_cols = F,fontsize = 4, filename = "diagram.png")
library(tidyverse)
tibble(a = -sample(1:26),
b = sample(1:26),
c = sample(1:26+26)) %>%
pivot_longer(b:c) %>%
ggplot(aes(a, value))+
geom_point()+
facet_wrap(~name, scales = "free_y")
library(tidyverse)
tibble(a = -sample(1:26),
b = sample(1:26),
c = sample(1:26+26)) %>%
pivot_longer(b:c) %>%
ggplot(aes(a, value))+
geom_point()+
facet_wrap(~name, scales = "free_y")
library(tidyverse)
tibble(a = -sample(1:26),
b = sample(1:26),
c = sample(1:26+26)) %>%
pivot_longer(b:c) %>%
ggplot(aes(a, value))+
geom_point()+
facet_wrap(~name, scales = "free_y")
library(tidyverse)
tibble(a = -sample(1:26),
b = sample(1:26),
c = sample(1:26+26)) %>%
pivot_longer(b:c) %>%
ggplot(aes(a, value))+
geom_point()+
facet_wrap(~name, scales = "free_y")
tibble(a = -sample(1:26),
b = sample(1:26),
c = sample(1:26+26)) %>%
pivot_longer(b:c) %>%
ggplot(aes(a, value))+ geom_point()+ facet_wrap(~name, scales = "free_y")
library(ggplot2)
library(tidyverse)
tibble(a = -sample(1:26), b = sample(1:26), c = sample(1:26+26)) %>%
ggpairs(aes())+ geom_point()
library(tidyverse)
library(GGally)
mtcars %>%
ggpairs()
install.packages(GGally)
install.packages("GGally")
library(tidyverse)
library(GGally)
mtcars %>%
ggpairs()
library(tidyverse)
library(haven)
df_bio <- read_xpt("C:/Users/SKudr/Documents/bioinformatics/3modul/BIOPRO_I.xpt")
df_demo <- read_xpt("C:/Users/SKudr/Documents/bioinformatics/3modul/DEMO_I.xpt")
df_all <- merge(df_bio, df_demo[ , c("SEQN", "RIAGENDR", "RIDAGEYR")], by = 'SEQN')
df_all[1:10]
df_all[2:10]
df_all[2:10] %>%
ggpairs()
ggplot(df_all, aes(x=LBDSALSI, y=RIDAGEYR, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
View(df_all)
ggplot(df_all, aes(x=LBDSALSI, y=LBXSKSI, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
ggplot(df_all, aes(x=LBXSBU, y=LBXSKSI, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
cols <- colnames(df_all)
cols <- colnames(df_all[2:])
cols <- colnames(df_all[2:40])
for (i in cols) {
print(i)
}
for (i in cols) {
print(i)
ggplot(df_all, aes(x=LBXSBU, y=i, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
}
ggplot(df_all, aes(x="LBXSBU", y="LBXSKSI", color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
ggplot(df_all, aes(x=LBXSBU, y="LBXSKSI", color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
ggplot(df_all, aes(x=LBXSBU, y=LBXSKSI, color = RIAGENDR)) + geom_point(alpha = 0.9) + geom_smooth(size = 1)
for (i in cols) {
print(df[i])
}
for (i in cols) {
print(df$i)
}
for (i in cols) {
ggplot(df_all, i, LBXSKSI)
}
ggplot(df_all, aes(i, LBXSKSI))
for (i in cols) {
ggplot(df_all, aes(i, LBXSKSI))
}
df_all[2:10] %>%
ggpairs()
df_all[2:10] %>%
ggpairs() -> myplots
myplots[1]
myplots[1,1]
myplots[1,2]
myplots[2,1]
myplots[4,1]
View(df_all)
df_all[2:40] %>%
ggpairs() -> myplots
View(myplots)
for (i in 1:40) {
for (j in (i+1:40)){
if (j < 41){
myplots[i,j]
}
}
}
for (i in 1:39) {
for (j in (i+1:39)){
if (j < 40){
myplots[i,j]
}
}
}
for (i in 1:39) {
for (j in (i+1:39)){
if (j < 40){
print(myplots[i,j])
}
}
}
"myplot"+as.string(i)+'__'+as.string(j)+".pdf"
"myplot"+as.string(i)+'__'+as.string(j)+".pdf"
"myplot"+as.String(i)+'__'+as.String(j)+".pdf"
"myplot"+String(i)+'__'+String(j)+".pdf"
string(asdasd)
stringi(asdas)
pdf("ggplot.pdf")
for (i in 1:39) {
for (j in (i+1:39)){
if (j < 40){
print(myplots[i,j])
}
}
}
dev.off()
pdf("ggplot.pdf")
for (i in 1:39) {
for (j in (i+1:39)){
if (j < 40){
print(myplots[j,i])
}
}
}
dev.off()
View(df_all)
pm <- ggpairs(df_all[2:5],ggplot2::aes(colour=RIDAGEYR))
pm
pm <- ggpairs(df_all[36:40],ggplot2::aes(colour=RIDAGEYR))
pm
pm[4,2]
View(myplots)
library(tidyverse)
library(haven)
library(GGally)
df_bio <- read_xpt("C:/Users/SKudr/Documents/bioinformatics/3modul/BIOPRO_I.xpt")
df_demo <- read_xpt("C:/Users/SKudr/Documents/bioinformatics/3modul/DEMO_I.xpt")
df_all <- merge(df_bio, df_demo[ , c("SEQN", "RIAGENDR", "RIDAGEYR")], by = 'SEQN')
df_male <- df_all[df_all$RIAGENDR == 1]
df_female <- df_all[df_all$RIAGENDR == 2]
df_all %>%
filter(RIAGENDR == 1) ->df_male
df_all %>%
filter(RIAGENDR == 2) ->df_female
myplots_male <- ggpairs(df_male[2:40], ggplot2::aes(colour=RIDAGEYR))
myplots_female <- ggpairs(df_female[2:40], ggplot2::aes(colour=RIDAGEYR))
pdf("myplots.pdf")
for (i in 1:39) {
for (j in (i+1:39)){
if (j < 40){
print(myplots_male[j,i])
print(myplots_female[j,i])
}
}
}
dev.off()
df_bio <- read_xpt("https://wwwn.cdc.gov/Nchs/Nhanes/2015-2016/BIOPRO_I.XPT")
df_demo <- read_xpt("https://wwwn.cdc.gov/Nchs/Nhanes/2015-2016/DEMO_I.XPT")
library(pheatmap)
#Задание 2 и 3
df_all_ <- df_all[,-1]
cm<-cor(df_all_, use = "pairwise.complete.obs")
write.table(cm, file="correlation_matrix.csv", row.names = F, col.names = F)
pheatmap(as.matrix(cm),display_numbers = T, cluster_rows = F,cluster_cols = F,fontsize = 4, filename = "heatmap.pdf")
write.csv(cm, file="correlation_matrix.csv", row.names = F, col.names = F)
df_all_ <- df_all[,-1]
cm<-cor(df_all_, use = "pairwise.complete.obs")
write.table(cm, file="correlation_matrix.csv", row.names = F, col.names = F)
pheatmap(as.matrix(cm),display_numbers = T, cluster_rows = F,cluster_cols = F,fontsize = 4, filename = "heatmap.pdf")
write.table(cm, file="correlation_matrix.csv", row.names = F, col.names = F, sep = ",")
qnorm(0.975, 0, 1)
dat <-  read.table("http://www.stat.ufl.edu/~winner/data/pgalpga2008.dat")
library(lme4)
dat %>%
filter(V3 = 2) ->ssss
lm(ssss$V2 ~ ssss$V1)
library(tidyverse)
dat %>%
filter(V3 = 2) -> ssss
lm(ssss$V2 ~ ssss$V1)
dat %>%
filter(V3 == 2) -> ssss
lm(ssss$V2 ~ ssss$V1)
174.9255 + -0.3879*260
dat %>%
ggplot(aes(V1, V2), color = V3)+
geom_point(aes(color=V3))+
geom_line(y = fit(lm(ssss$V2 ~ ssss$V1)))
lm(ssss$V2 ~ ssss$V1) -> fit2
dat %>%
mutate(predicted = predict(fit2))
ggplot(aes(V1, V2), color = V3)+
geom_point(aes(color=V3))+
geom_line(aes(y = predicted), color = "red")
dat %>%
mutate(predicted = predict(fit2))
ggplot(aes(V1, V2), color = V3)+
geom_point()+
geom_line(aes(y = predicted), color = "red")
dat %>%
mutate(predicted = predict(fit2))
ggplot(aes(V1, V2))+
geom_point(color = V3)+
geom_line(aes(y = predicted), color = "red")
dat %>%
filter(V3 == 2) -> ssss
lm(ssss$V2 ~ ssss$V1)
dat %>%
filter(V3 == 1) -> ssss
lm(ssss$V2 ~ ssss$V1)
130.8933 + -0.2565*260
dat$V3 <- dat$V3-1
View(dat)
lm(V2~V1+V3)
lm(dat$V2~dat$V1+dat$V3)
lm(dat$V2~dat$V1+dat$V3) -> mod
plot(fitted(mod), residuals(mod))
ggplot()
stat_function(fun = dbeta, args = list(0.5, 0.5),
color = 'red')
library(tidyverse)
ggplot()+
stat_function(fun = dbeta, args = list(0.5, 0.5),
color = 'red')
###
#if (!requireNamespace("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
#library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
BiocManager::install("clusterProfiler")
install.packages("BiocManager")
BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
library(ChIPseeker)
BiocManager::install("ChIPseeker")
setwd("C:/Users/SKudr/Documents/GitHub/hse21_H3K4me1_ZDNA_mouse/src")
source('lib.R')
library(ChIPseeker)
#library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
NAME <- 'H3K4me1_ENCFF596ORE.mm10.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
#pdf(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.pdf'))
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
BiocManager::install("org.Hs.eg.db")
